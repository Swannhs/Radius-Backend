<?php

namespace App\Controller;

use App\Controller\AppController;

/**
 * ServerRealms Controller
 *
 * @property \App\Model\Table\ServerRealmsTable $ServerRealms
 * @property \App\Model\Table\ServersTable $Servers
 * @property \App\Model\Table\UsersTable $Users
 *
 *
 * @method \App\Model\Entity\ServerRealm[]|\Cake\Datasource\ResultSetInterface paginate($object = null, array $settings = [])
 */
class ServerRealmsController extends AppController
{

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadModel('Users');
        $this->loadModel('ServerRealms');
        $this->loadModel('Servers');

        $this->loadComponent('Aa');
        $this->loadComponent('Formatter');
    }

    function checkToken()
    {
        $user = $this->Aa->user_for_token($this);
        return $user['id'];
    }

    /**
     * Index method
     *
     * @return \Cake\Http\Response|null
     */
    public function index()
    {
        $this->request->allowMethod('get');
        if ($this->Aa->admin_check($this)) {
            $serverRealms = $this->ServerRealms->find()
                ->contain(['Servers', 'Realms']);

            $total = $serverRealms->count();

            $item = $this->Formatter->pagination($serverRealms);


            $this->set([
                'serverRealms' => $item,
                'totalCount' => $total,
                'success' => true,
                '_serialize' => ['serverRealms', 'success', 'totalCount']
            ]);
        } else {
            $this->set([
                'message' => 'Invalid account',
                'success' => false,
                '_serialize' => ['success', 'message']
            ]);
        }
    }

    public function servers()
    {
        $servers = $this->Servers->find();

        $this->set([
            'servers' => $servers,
            '_serialize' => ['servers']
        ]);
    }


    /**
     * Add method
     *
     * @return \Cake\Http\Response|null Redirects on successful add, renders view otherwise.
     */
    public function add()
    {
        $this->request->allowMethod('post');
        if ($this->Aa->admin_check($this)) {
            $serverRealm = $this->ServerRealms->newEntity();

            $serverRealm->set([
                'server_id' => $this->request->getData('server'),
                'realm_id' => $this->request->getData('realm')
            ]);

            if ($this->ServerRealms->save($serverRealm)) {
                $this->set([
                    'message' => 'Generated successful',
                    'success' => true,
                    '_serialize' => ['success', 'message']
                ]);
            } else {
                $this->set([
                    'message' => 'failed to generate',
                    'success' => false,
                    '_serialize' => ['success', 'message']
                ]);
            }
        } else {
            $this->set([
                'message' => 'Invalid account',
                'success' => false,
                '_serialize' => ['success', 'message']
            ]);
        }
    }

    public function delete()
    {
        $this->request->allowMethod('post');
        if ($this->Aa->admin_check($this)) {
            $delete = $this->ServerRealms->get($this->request->data('id'));

            if ($this->ServerRealms->delete($delete)) {
                $this->set([
                    'message' => 'Server Realms is removed successfully',
                    'success' => true,
                    '_serialize' => ['success', 'message']
                ]);
            } else {
                $this->set([
                    'message' => 'Something is went wrong with database',
                    'success' => false,
                    '_serialize' => ['success', 'message']
                ]);
            }

        } else {
            $this->set([
                'message' => 'Invalid account',
                'success' => false,
                '_serialize' => ['success', 'message']
            ]);
        }
    }

}
